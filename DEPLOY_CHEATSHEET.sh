#!/bin/bash

# ===============================
# QUICK DEPLOY CHEATSHEET
# ===============================
# Copy-paste commands ini untuk deploy ke VPS
# Ganti: ubuntu@13.229.87.19 dengan user@IP_VPS_Anda

echo "=========================================="
echo "VPS DEPLOYMENT - QUICK COMMANDS"
echo "=========================================="
echo ""

echo "ðŸ“‹ OPTION 1: AUTOMATED DEPLOY (EASIEST)"
echo "=========================================="
echo ""
echo "# 1. Deploy dari local machine:"
echo "./deploy_to_vps.sh ubuntu@13.229.87.19"
echo ""
echo "# 2. SSH ke VPS:"
echo "ssh ubuntu@13.229.87.19"
echo ""
echo "# 3. Di VPS, edit .env file:"
echo "cd ~/hackathon_1"
echo "nano configs/.env"
echo ""
echo "# 4. Setup database:"
echo 'mysql -u root -p -e "CREATE DATABASE IF NOT EXISTS hackathon_getcontact;"'
echo ""
echo "# 5. Run aplikasi di background:"
echo "nohup ./bin/server > logs/app.log 2>&1 &"
echo ""
echo "# 6. Setup nginx:"
echo "sudo ./setup_nginx.sh"
echo ""
echo "# 7. Test:"
echo "curl http://13.229.87.19/api/v1/ping"
echo ""
echo "=========================================="
echo ""

echo "ðŸ“‹ OPTION 2: MANUAL STEP-BY-STEP"
echo "=========================================="
echo ""
echo "# 1. Build di local:"
echo "make build"
echo ""
echo "# 2. Upload ke VPS:"
echo 'ssh ubuntu@13.229.87.19 "mkdir -p ~/hackathon_1/{bin,configs,logs}"'
echo "scp bin/server ubuntu@13.229.87.19:~/hackathon_1/bin/"
echo "scp setup_nginx.sh ubuntu@13.229.87.19:~/hackathon_1/"
echo ""
echo "# 3. SSH ke VPS:"
echo "ssh ubuntu@13.229.87.19"
echo ""
echo "# 4. Di VPS, buat .env file:"
echo "cat > ~/hackathon_1/configs/.env << 'EOF'"
echo "DB_HOST=localhost"
echo "DB_PORT=3306"
echo "DB_USER=yudo"
echo "DB_PASSWORD=yudo123"
echo "DB_NAME=hackathon_getcontact"
echo "SERVER_PORT=9001"
echo "JWT_SECRET=HackthonII-2025"
echo "JWT_EXPIRATION=168h"
echo "EOF"
echo ""
echo "# 5. Setup database:"
echo 'mysql -u root -p << EOF'
echo "CREATE DATABASE IF NOT EXISTS hackathon_getcontact;"
echo "CREATE USER IF NOT EXISTS 'yudo'@'localhost' IDENTIFIED BY 'yudo123';"
echo "GRANT ALL PRIVILEGES ON hackathon_getcontact.* TO 'yudo'@'localhost';"
echo "FLUSH PRIVILEGES;"
echo "EOF"
echo ""
echo "# 6. Run aplikasi:"
echo "cd ~/hackathon_1"
echo "chmod +x bin/server"
echo "nohup ./bin/server > logs/app.log 2>&1 &"
echo ""
echo "# 7. Cek aplikasi running:"
echo "ps aux | grep server"
echo "curl http://localhost:9001/api/v1/ping"
echo ""
echo "# 8. Setup nginx:"
echo "sudo apt install -y nginx"
echo "cd ~/hackathon_1"
echo "chmod +x setup_nginx.sh"
echo "sudo ./setup_nginx.sh"
echo ""
echo "# 9. Test dari external:"
echo "curl http://13.229.87.19/api/v1/ping"
echo ""
echo "=========================================="
echo ""

echo "ðŸ“‹ TROUBLESHOOTING COMMANDS"
echo "=========================================="
echo ""
echo "# Cek apakah aplikasi running:"
echo "ps aux | grep server"
echo ""
echo "# Lihat logs aplikasi:"
echo "tail -f ~/hackathon_1/logs/app.log"
echo ""
echo "# Cek port 9001:"
echo "sudo lsof -i :9001"
echo ""
echo "# Kill aplikasi yang running:"
echo "pkill -f 'bin/server'"
echo ""
echo "# Restart aplikasi:"
echo "cd ~/hackathon_1 && nohup ./bin/server > logs/app.log 2>&1 &"
echo ""
echo "# Cek nginx status:"
echo "sudo systemctl status nginx"
echo ""
echo "# Restart nginx:"
echo "sudo systemctl restart nginx"
echo ""
echo "# Cek nginx logs:"
echo "sudo tail -f /var/log/nginx/error.log"
echo ""
echo "# Test koneksi database:"
echo "mysql -u yudo -pyudo123 -e 'USE hackathon_getcontact; SHOW TABLES;'"
echo ""
echo "# Run full troubleshoot:"
echo "cd ~/hackathon_1 && ./troubleshoot_vps.sh"
echo ""
echo "=========================================="
echo ""

echo "ðŸ“‹ USEFUL MANAGEMENT COMMANDS"
echo "=========================================="
echo ""
echo "# Start aplikasi:"
echo "cd ~/hackathon_1 && ./bin/server &"
echo ""
echo "# Stop aplikasi:"
echo "pkill -f 'bin/server'"
echo ""
echo "# Restart aplikasi:"
echo "pkill -f 'bin/server' && cd ~/hackathon_1 && ./bin/server &"
echo ""
echo "# Lihat aplikasi logs:"
echo "tail -f ~/hackathon_1/logs/app.log"
echo ""
echo "# Backup database:"
echo "mysqldump -u yudo -pyudo123 hackathon_getcontact > backup_\$(date +%Y%m%d).sql"
echo ""
echo "# Check memory usage:"
echo "free -h"
echo ""
echo "# Check disk space:"
echo "df -h"
echo ""
echo "# Check open ports:"
echo "sudo netstat -tlnp"
echo ""
echo "=========================================="
echo ""

echo "âœ… QUICK TEST COMMANDS"
echo "=========================================="
echo ""
echo "# Test ping endpoint:"
echo "curl http://13.229.87.19/api/v1/ping"
echo ""
echo "# Test health endpoint:"
echo "curl http://13.229.87.19/api/v1/health"
echo ""
echo "# Test register:"
echo "curl --location 'http://13.229.87.19/api/v1/auth/register' \\"
echo "--header 'Content-Type: application/json' \\"
echo "--data-raw '{"
echo '    "full_name": "Test User",'
echo '    "email": "test@example.com",'
echo '    "password": "password123"'
echo "}'"
echo ""
echo "=========================================="
echo ""

echo "ðŸ“š DOCUMENTATION"
echo "=========================================="
echo "Full guide: docs/HOW_TO_RUN_ON_VPS.md"
echo "Scripts ref: docs/SCRIPTS_REFERENCE.md"
echo "Quick fixes: docs/VPS_QUICK_FIX.md"
echo ""
